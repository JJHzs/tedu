zabbix
(监控主机是2.5 被监控 的是2.100)

zabbix 是 运行在web上的
在办公室 打开浏览器 访问监控服务器
支持 snmp　协议的 路由器 交换机 都可以 还有 windows  虚拟机做的 linux 系统 
 各种网站服务 数据库 ftp nginx 都可以  各种硬件 内存硬盘cpu 都可以
事先 把 zabbix 服务器 配置好了 设置监控这写对象  他就会到目标主机上收集这些数据 并把数据绘制成图标 在办公室 电脑旁打开 浏览器 访问这个服务器  就可以啦！ 

通过　ｓｎｍｐ 采集数据 或　访问 代理服务器　采集数据！！

要到 被监控的主机上 采集数据 他是 用数据库 存储采集到的数据!! 并生成 图标!!!





监控的目的:
报告系统运行的状况

通过查看监控服务器的 信息 来知道 是否有问题!
看到的是系统运行状况 : 网络吞吐量 , 服务 响应 客户端的 反应时间 , 各种硬件的使用率等!!
监控时 : 网络,服务的运行状况 系统硬件资源的使用  同时监控: 只有他们 都正常高效稳定的运行 服务器 才能正常提供服务!!!!
监控时根据他们报告的运行情况 提前发现 问题===> 服务器性能哪里出现问题??? 
比如 服务器响应慢了 
哪个硬件不行了? 使用率过高  处理速率慢了 网络不行还是硬件占用资源 过高 才处理速度 慢  这是监控的目的!!
然后要做控制 就是要把问题消灭在 发生之前 而不是等问题发生了 才去 解决!!!

公开数据 和 私有数据 配置是不一样的!
公开 : (各种服务) 通过监视端口是否开放的 			web ftp ssh等
私有数据 : 没有端口连接的 而是在服务器的 本地 显示的! 	cpu使用率 内存空闲空间 使用多少剩多少 磁盘空间用和剩 网卡流量等 本地用户个数 当前运行的进程数量

监控软件 == 服务 (cacti nagios zabbix) 不会的话 就自己手动监控ps 看进程的

==============================================================

uptime cpu负载
free 看内存和交换分区的!
swapon -s 看交换分区状态信息的
df -h看 硬盘 使用情况
ifconfig 网卡信息
netstat 或 ss 看 进程信息的
ping 看能否ping 同 目标主机 或者 自己能否和别人通信的
traceroute   路由追踪!!!!!!!    显示一下 到达 目标主机经过的 路由信息 !
iostat 

===================================================================

traceroute www.baidu.com  显示一下 到达 目标主机经过的 路由信息 !

1  gateway (176.19.1.1)  0.490 ms  1.061 ms  1.282 ms
 2  20.1.1.1 (20.1.1.1)  0.351 ms  0.365 ms  0.430 ms
 3  122.224.245.73 (122.224.245.73)  2.227 ms  2.417 ms  2.516 ms
 4  220.191.157.237 (220.191.157.237)  2.517 ms 220.191.156.154 (220.191.156.154)  1.909 ms 61.164.22.212 (61.164.22.212)  2.401 ms
 5  61.164.8.84 (61.164.8.84)  5.836 ms 61.164.14.196 (61.164.14.196)  6.201 ms 61.164.8.122 (61.164.8.122)  6.596 ms
 6  202.97.22.1 (202.97.22.1)  12.425 ms 202.97.76.114 (202.97.76.114)  12.104 ms 202.97.33.149 (202.97.33.149)  13.970 ms
 7  58.213.94.110 (58.213.94.110)  13.897 ms 58.213.95.2 (58.213.95.2)  13.210 ms 58.213.94.98 (58.213.94.98)  11.724 ms
 8  * 58.213.95.134 (58.213.95.134)  12.946 ms *
 9  58.213.96.70 (58.213.96.70)  11.935 ms 58.213.96.74 (58.213.96.74)  12.368 ms 58.213.96.90 (58.213.96.90)  11.638 ms
10  * * *
11  * * *
12  * * *
13  * * *

iostat   看当前这台 机子的 硬盘的读写状态!!!!!!!! (硬盘 要么是读数据 要么是写数据 所以是io )
		若读取数度越快 则 存取速度 越快!

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           1.84    0.01    0.42    3.22    0.00   94.51

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
sda              10.65       333.47        77.04    2195177     507140

哪个盘(设备)			  每秒读的速度  每秒写的速度	   总的读的kb数  总的写的kb数(查的那一刻)  数值越大 说明 读写越快

=====================================================================
cacti( snmp协议简单网络管理协议 强大绘图能力 ) nagios( 被监控的一定要有代理服务agent 强大的 状态监测与报警机制 插件很多 软件里内置的 内置的监控命令 若满足不了需要自己 写监控脚本!!! )         zabbix(上面二者兼有!!!)
====================================================================

###############################################################################################


zabbix
1 一个高集成 监控解决方案
2 企业级 开源分布式 监控
3 C/S( 客户端/服务端 ) 模式采集监控数据!!!!
4 B/S( web/服务端) 模式 实现 web管理

数据存储到 数据库里

1 监控服务器 通过 snmp采集数据 或者 客户端的agent采集数据
2 采集的数据 可以写入也是支持 MySQL Oracle 等数据库
3 服务器 使用lnmp实现web前端的管理!

客户端 如果是主机 需要安装 agent
        如果是 网络设备 则 需要支持SNMP协议!!
装包:
先布置 lnmp 环境
yum -y install gcc pcre-devel  openssl-devel zlib-devel(支持压缩的模块!)
tar -xf nginx-1.12.2.tar.gz  cd nginx-1.12.2
./configure --with-http_ssl_module && make && make install
yum -y install php php-mysql php-fpm  mariadb(提供 命令) mariadb-devel(提供库文件) mariadb-server (提供服务)
location ~ \.php$ {
                root           html;
                fastcgi_pass   127.0.0.1:9000;
                fastcgi_index  index.php;
                include        fastcgi.conf;
        }

systemctl start  mariadb   php-fpm
/usr/local/nginx/sbin/nginx 

测试:
vim /usr/local/nginx/html/test.php
<?php
$i=33;
echo $i;
?>
[root@zabbixserver ~]# curl http://192.168.2.5/test.php


################################################################################################3

======================================
修改 nginx 配置文件的 代码 (必须修改 不改的话不会显示)
 
在 http 下面 :::::::

http {
        fastcgi_buffers 8 16k;           #缓存php生成的页面内容，8个16k
    fastcgi_buffer_size 32k;             #缓存php生产的头部信息
    fastcgi_connect_timeout 300;         #连接PHP的超时时间
    fastcgi_send_timeout 300;            #发送请求的超时时间
    fastcgi_read_timeout 300;            #读取请求的超时时间


################################################################################################

zabbix 
源码安装 :
 yum -y install  net-snmp-devel  curl-devel  libevent-devel-2.0.21-4.el7.x86_64.rpm

tar -xf zabbix-3.4.4.tar.gz  cd zabbix-3.4.4/

./configure  --enable-server  --enable-proxy --enable-agent --with-mysql=/usr/bin/mysql_config
> --with-net-snmp --with-libcurl


zabbix 要可以通过snmp 协议 访问被监控主机 所以 要yum snmp  并且在 configure 加载 snmp的模块
-with-libcurl 是支持 curl 访问 页面  curl-devel  libevent-devel 是支持 curl对应的软件包!
要支持 mysql的存储信息! 所以 --with-mysql=/usr/bin/mysql_config(告诉他 mysql配置文件 在哪)
启用server proxy agent  可以自己监控自己 自己是客户端.proxy 假如 要监控特别多 50台 .可以起代理程序 之间控5台,每一台管理10台即可!!!!!!!
=======================================
默认  把相关的命令都装在了 /usr/local/bin下
	启动程序	     /usr/local/sbin
	相关配置文件        /usr/local/etc
===========================================
初始化 zabbix
(创建存储数据的 数据库 和 数据库账号)

mysql
> create database zabbix character set utf8; 创建库  并 定义字符级 utf8 可以存中文.
> grant all on zabbix.* to zabbix@"localhos" identified by 'zabbix'; 添加一个访问数据的授权用户!

ls zabbix-3.4.4/database/mysql/
data.sql  images.sql  schema.sql

在 源码里面data/mysql 恢复
从后往前恢复

cd database/mysql/
mysql -uzabbix -pzabbix zabbix < schema.sql
mysql -uzabbix -pzabbix zabbix < images.sql
mysql -uzabbix -pzabbix zabbix < data.sql

接下来 把web页面放到 网页目录下
cp -a zabbix-3.4.4/frontends/php/* /usr/local/nginx/html
chmod -R 777 /usr/local/nginx/html/*

一    启动 server

配置:

vim /usr/local/etc/zabbix_server.conf
12 ListenPort=10051
38 LogFile=/tmp/zabbix_server.log
85 DBHost=localhost
95 DBName=zabbix
111 DBUser=zabbix
119 DBPassword=zabbix

useradd zabbix

ls /usr/local/sbin
zabbix_agentd  zabbix_proxy  zabbix_server
echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
所以可以直接 执行 启动!!
zabbix_server 

ss -ntulp |grep :10051

===============================================================

二     修改配置文件,启动zabbix_agent

vim /usr/local/etc/zabbix_agentd.conf

Server=127.0.0.1,192.168.2.5           定义 可以访问zabbix_agent服务的机器的ip地址  (自己监控自己,环回口 和eth1口,允许什么主机可以访问这个服务!) 
ServerActive=127.0.0.1,192.168.2.5     监控服务器的IP地址!     
Hostname=zabbix_server                 给当台 机器起个名字(及时监控又是被监控)       //设置本机主机名
LogFile=/tmp/zabbix_server.log         agent服务启动时候的 日志文件的名称和存储位置           
UnsafeUserParameters=1                 是否允许 被监控的机器 定义监控命令! 
  LIstenport=10050 			  服务端口号默认 10050

[root@zabbixserver ~]# zabbix_agentd            //启动监控agent

101 ListenPort=10050	   默认服务端口号默认 10050
134 ServerActive=127.0.0.1  默认监控服务器 ip地址
145 Hostname=Zabbix server  (和linux里的 hostname 命令没有关系)
30 LogFile=/tmp/zabbix_agentd.log
280 UnsafeUserParameters=1  默认是0 表示不允许 定义监控命令!!!自能监控服务器自带的命令!!! 
] # zabbix_agentd 
] # ss -ntulp |grep 10050

初始化配置!!!!!!
初始化 准备: 
yum -y install php-gd php-xml php-ldap  因为 以web显示监控信息 和绘图 (支持 绘图 图片的 php程序)
yum -y install php-bcmath  php-mbstring centos7.5 yum源里 自带!!!!

改 配置: (; 号开头为注释)
vim /etc/php.ini

注意是 zabbix 必须修改的!!!! 才能起 服务!!!  最后一行除外!
878 date.timezone = Asia/Shanghai	设置时区
672 post_max_size = 16M  (8M改成 16M)
384 max_execution_time = 300 命令的最大执行时间 30 改成300
394 max_input_time = 300     上传数据的最大时间
405 memory_limit = 128M	   (不该也无所谓) 服务器接受的默认 限制!
systemctl restart php-fpm

登录管理界面:
管理员 admin
密码   zabbix

======================================
zabbix 监控服务
修改页面语言为中文
修改管理员 密码!
查看监控主机!! (默认监控本机 自己)
查看监控数据!! 

配置 ->主机 (默认30秒刷一次!)


监测中->最新数据 添加主机群组(zabbix servers) 主机(zabbix server) ->应用


监控远端主机!!!
配置被监控的主机
配置监控服务器!!!

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
===================================
三       被监控服务器 
配置被监控服务器:

在 agent 主机上
 yum -y install gcc pcre-devel openssl-devel
tar -xvf zabbix-3.4.4.tar.gz
cd zabbix-3.4.4
./configure --enable-agent
make install


改配置
vim /usr/local/etc/zabbix_agentd.conf

93 Server=127.0.0.1,192.168.2.5  定义访问 服务的 ip地址 允许这两个ip访问自己的agent 服务
134 ServerActive=192.168.2.5	  指定 监控服务器的 ip地址
145 Hostname=web100
30 LogFile=/tmp/zabbix_agentd.log 日志文件的 名称和存储路径 记录日志信息! 服务运行的日志信息!!!
101 ListenPort=10050 		   (默认10050)
280 UnsafeUserParameters=1	  自己可以 写监控命令

useradd -s /sbin/nologin zabbix
zabbix_agentd
ss -ntulp |grep zabbix

==========================================================
web 网页上 操作 :  在监控服务器上 做
登录 admin 操作::

配置->主机->添加主机->取个主机名 web100->linux servers 群 ->ip->192.168.2.100 (被监控的)->更新
配置->主机->模板->选择里 打 os->template os linux 打 http->选择 template App http service->更新

检测中->最新数据->linux servers->应用!
==========================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

四       自定义 监控!
在客户端 编写 监控命令 给监控服务调用!!
1,配置客户端.
启用自定义监控项
编写监控命令
重启zabbix_agentd服务
测试自定义监控项

2,配置服务器!
管理员admin登录 管理员 页面作如下操作!
创建新的 监控模板
创建应用集
创建监控项目 并关联命令
监控客户端是调用 新创建的 监控模板
查看监控信息

====================================
一 1,启用自定义监控项
vim /usr/local/etc/zabbix_agentd.conf
280 UnsafeUserParameters=1	开启自定义监控

263 # Include=/usr/local/etc/zabbix_agentd.userparams.conf 
264 # Include=/usr/local/etc/zabbix_agentd.conf.d/
265  Include=/usr/local/etc/zabbix_agentd.conf.d/*.conf 
这三个 起任一个即可!!!

二 2 , 编辑 监控命令
vim /usr/local/etc/zabbix_agentd.conf.d/count.line.passwd.conf

1, 查看Format:
#       Format: UserParameter=<key>,<shell command>  (命令的名称 ,具体的功能)(可以是shell命令或shell脚本)
#       See 'zabbix_agentd' directory for examples.  

2, vim /usr/local/etc/zabbix_agentd.conf.d/count.line.passwd.conf
 UserParameter=get_user_num,wc -l /etc/passwd |awk '{print $1}' 

三 3, 重启zabbix_agentd服务
 
重启服务!!(先杀死服务 再起!)
killall -9 zabbix_agentd
zabbix_agentd
ss -ntulp |grep 10050

四 4, 测试自定义监控项: 
zabbix_get -s 127.0.0.1 -p 10050 -k get_user_num  (-k 后面是 定义的 命令项)
UserParameter=get_user_num,wc -l /etc/passwd |awk '{print $1}' (监控的是 系统的总用户数)

配置监控 服务器 192.168.2.5
管理员 admin登录 管理页面作如下操作:

创建新的监控 模板 Atmp
创建应用集         usergrp
创建监控项目 (并关联命令) mon_user_100 对应的是 get_user_num
创建 客户端时 调用新创建的监控模板 Atmp
查看监控信息

网页:
配置-->模板-->创建模板-->Atmp-Atmp->Tmplates->添加
模板->应用集-->添加应用集-->名称-->yyjone(随便)
应用集-->监控项-->创建监控项-->名称-->mon_user_100-->键值-->get_user_num(因为返回值是个数字 所以没有单位)--->应用集->yyjone-->添加!

调用 模板:
配置 --> 主机 -->web100-->模板-->链接指示器-->Atmp-->添加-->更新

邮件报警!!!!!!!!!

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
总结:

一       先搭建lnmp 环境 
二       然后 搭建 zabbix_server服务

vim /usr/local/etc/zabbix_server.conf
12 ListenPort=10051
38 LogFile=/tmp/zabbix_server.log
85 DBHost=localhost
95 DBName=zabbix
111 DBUser=zabbix
119 DBPassword=zabbix

useradd zabbix
zabbix_server   启动服务
ss -ntulp|grep 10051


三      修改配置文件,启动zabbix_agent

vim /usr/local/etc/zabbix_agentd.conf

Server=127.0.0.1,192.168.2.5           定义 可以访问zabbix_agent服务的机器的ip地址  (自己监控自己,环回口 和eth1口,允许什么主机可以访问这个服务!) 
ServerActive=127.0.0.1,192.168.2.5     监控服务器的IP地址!     
Hostname=zabbix_server                 给当台 机器起个名字(及时监控又是被监控)       //设置本机主机名
LogFile=/tmp/zabbix_server.log         agent服务启动时候的 日志文件的名称和存储位置           
UnsafeUserParameters=1                 是否允许 被监控的机器 定义监控命令! 
  LIstenport=10050 			  服务端口号默认 10050

[root@zabbixserver ~]# zabbix_agentd            //启动监控agent

四      在 被监控的服务器上

配置被监控服务器:

在 agent 主机上
 yum -y install gcc pcre-devel openssl-devel
tar -xvf zabbix-3.4.4.tar.gz
cd zabbix-3.4.4
./configure --enable-agent
make install


改配置
vim /usr/local/etc/zabbix_agentd.conf

93 Server=127.0.0.1,192.168.2.5  定义访问 服务的 ip地址 允许这两个ip访问自己的agent 服务
134 ServerActive=192.168.2.5	  指定 监控服务器的 ip地址
145 Hostname=web100
30 LogFile=/tmp/zabbix_agentd.log 日志文件的 名称和存储路径 记录日志信息! 服务运行的日志信息!!!
101 ListenPort=10050 		   (默认10050)
280 UnsafeUserParameters=1	  自己可以 写监控命令

useradd -s /sbin/nologin zabbix
zabbix_agentd
ss -ntulp |grep zabbix


五     在网页 页面上操作
建 主机 监控项等...
六     自定义

触发器:::  ===> 当触发条件发生后会导致一个 触发事件  触发事件 会 执行某个 动作!
动作:::  ===> 触发器的 条件被触发 后执行的 行为!  ==>可以是 发送邮件 或者 重启某个服务等等!!
1 ) 创建触发器:

( 自定义监控项 默认不会自动报警 首页也不会提示错误   需要配置触发器 与报警动作才可以 自定义报警!!!!! )

配置 ->模板->监控项->触发器

2 ) 创建动作 , 发邮件 =>下载 安装 postfix 
yum -y install postfix 
systemctl restart postfix

yum -y install mailx-12.5-19.el7.x86_64
mail -u zabbix

创建动作的步骤:
配置-->动作->创建动作  名称 -> 触发器名称 似 chfq(刚才起的触发器的名字)->小添加-->最后的添加

自动发现功能:
当zabbix 需要监控设备越来越多 手动添加监控设备 越来越有田占 所以要考虑 自动发现功能

需要批量 一次性ti9njia一组 监控主机 也可以 使用自动发现功能

可以实现:
 自动发现 添加主机 自动 添加主机到组
 自动连接模板 到主机自动创建监控项目 与图形等!!!

创建 自动发现规则!
配置->自动发现-->创建自动发现规则
ip 地址范围
更新间隔 1m 
新的->
端口范围 (根据要检查的 来写)

测试 自动发现


主被动监控!
当 客户端量大. 当被监控的量大 让 客户端主动连接 服务器 手机号数据后 给服务器 服务器自动存取数据 即可! 













